# -*- coding: utf-8 -*-
"""졸피뎀_AI_모델

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1382TKJvPiyQPPafdozR-HhXpiQfYcpd6
"""

import sys


# Google Colab 환경에서만 실행되도록 함
if 'google.colab' in sys.modules:
    import os
    os.system("echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections")
    os.system("sudo apt-get -qq -y install fonts-nanum")

    # 나눔 폰트 경로를 Matplotlib에 등록
   

plt.rcParams['font.family'] = 'NanumGothic'    #사용 방법1
plt.rc('font', family='NanumBarunGothic', size=11) #사용 방법2
print(plt.rcParams['font.family'], plt.rcParams['font.size'])   # 폰트확인



# ① 데이터셋 만들기
import pandas as pd

data = {
    "나이": [25, 35, 60, 45, 70, 30, 20, 50, 65, 40,
           18, 55, 33, 42, 67, 38, 26, 48, 60, 31],
    "체중": [60, 70, 50, 65, 55, 68, 72, 59, 53, 61,
           49, 54, 63, 58, 52, 66, 62, 60, 51, 67],
    "수면시작_시각": [23, 22, 21, 22.5, 20.5, 23.5, 24, 22, 21.5, 23,
                  22.5, 21, 23, 23.5, 20, 22, 22, 21, 21.5, 23],
    "추천_복용량": [5, 5, 2.5, 5, 2.5, 5, 5, 5, 2.5, 5,
                 5, 2.5, 5, 5, 2.5, 5, 5, 5, 2.5, 5],
    "추천_복용시각": [22.5, 21.5, 20, 21.5, 19.5, 22, 22.5, 21.5, 20, 22,
                  21.5, 20.5, 22, 22.5, 19.5, 21, 21.5, 20.5, 20, 22]
}

df = pd.DataFrame(data)

# ② 모델 학습
from sklearn.linear_model import LinearRegression

X = df[["나이", "체중", "수면시작_시각"]]
y = df[["추천_복용량", "추천_복용시각"]]  # 복용량 + 복용시각 함께 학습

model = LinearRegression()
model.fit(X, y)

# ③ 사용자 입력
나이 = float(input("나이를 입력하세요: "))
체중 = float(input("체중을 입력하세요 (kg): "))
수면시각 = float(input("수면 시작 시간을 입력하세요 (예: 22.5): "))

입력값 = pd.DataFrame([[나이, 체중, 수면시각]], columns=["나이", "체중", "수면시작_시각"])

# ④ 예측
예측결과 = model.predict(입력값)
예측_복용량 = round(예측결과[0][0], 2)
예측_복용시각 = round(예측결과[0][1], 2)

print(f"\n✅ 추천 복용량: {예측_복용량} mg")
print(f"🕒 추천 복용 시각: {예측_복용시각} 시")

# ⑤ 위험 경고 시스템
if 나이 >= 65 and 체중 <= 50 and 예측_복용량 > 5:
    print("⚠️ 고령 저체중 상태에서 복용량이 높습니다. 의사 상담 권장!")
elif 예측_복용량 > 7.5:
    print("⚠️ 복용량이 일반 권장량보다 높습니다. 복용 주의!")
else:
    print("✅ 복용 안전 범위입니다.")

# ⑥ 정규분포 기반 수면 지속 시간 예측
from scipy.stats import norm
import matplotlib.pyplot as plt

평균수면 = 예측_복용량  # 복용량(mg)이 곧 평균 수면 시간
표준편차 = 1

P_4_to_6 = norm.cdf(6, 평균수면, 표준편차) - norm.cdf(4, 평균수면, 표준편차)
P_4_to_6 = round(P_4_to_6 * 100, 2)

print(f"\n📊예측된 평균 수면 시간: {평균수면} 시간")
print(f"🧪수면이 4~6시간 지속될 확률: {P_4_to_6}%")

# ⑦ 정규분포 시각화
x = [i/10 for i in range(int((평균수면-3)*10), int((평균수면+3)*10))]
y = [norm.pdf(val, 평균수면, 표준편차) for val in x]

plt.figure(figsize=(8, 4))
plt.plot(x, y, label="수면 지속 시간 정규분포")
plt.axvline(x=평균수면, color='red', linestyle='--', label=f'예측 평균: {평균수면}시간')
plt.fill_between(x, 0, y, where=[4<=val<=6 for val in x], color='skyblue', alpha=0.4, label="4~6시간 구간")
plt.title("예상 수면 지속 시간 분포")
plt.xlabel("수면 지속 시간 (시간)")
plt.ylabel("확률 밀도")
plt.legend()
plt.grid(True)
plt.show()

# ⑧ 사용자 위치 시각화
plt.scatter(df["체중"], df["나이"], c=df["추천_복용량"], cmap='coolwarm', label="훈련 데이터")
plt.scatter(체중, 나이, color='black', marker='X', s=120, label="당신")
plt.xlabel("체중 (kg)")
plt.ylabel("나이")
plt.title("사용자의 복용 위치 시각화")
plt.legend()
plt.colorbar(label="복용량 (mg)")
plt.grid(True)
plt.show()
